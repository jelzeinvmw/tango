---
project: TMM Auto
kind: PIPELINE
name: VMworld-K8s-on-AWS-DemoApp
enabled: true
concurrency: 10
options: [
  GIT_TRIGGER]
input:
  GIT_SERVER_URL: ''
  GIT_BRANCH_NAME: ''
  GIT_COMMIT_ID: ''
  GIT_EVENT_TIMESTAMP: ''
  GIT_EVENT_DESCRIPTION: ''
  GIT_REPO_NAME: ''
  GIT_EVENT_OWNER_NAME: ''
  GIT_CHANGE_SUBJECT: ''
starred:
  input: GIT_COMMIT_ID
ciWorkspace:
  image: ''
  path: ''
  cache:
  - ''
  endpoint: ''
stageOrder:
- DEV
- DEPLOY
stages:
  DEV:
    taskOrder:
    - Build-DemoApp
    - Test-DemoApp
    - Publish-DemoApp
    tasks:
      Build-DemoApp:
        type: Jenkins
        ignoreFailure: false
        preCondition: ''
        endpoints:
          jenkinsServer: Jenkins-OnPrem
        input:
          job: Build-DemoApp
          parameters: {
            branchName: '${input.GIT_BRANCH_NAME}'
          }
      Publish-DemoApp:
        type: Jenkins
        ignoreFailure: false
        preCondition: ''
        endpoints:
          jenkinsServer: Jenkins-OnPrem
        input:
          job: Publish-DemoApp
          parameters: {
            branchName: '${input.GIT_BRANCH_NAME}'
          }
      Test-DemoApp:
        type: Jenkins
        ignoreFailure: false
        preCondition: ''
        endpoints:
          jenkinsServer: Jenkins-OnPrem
        input:
          job: Test-DemoApp
          parameters: {
            branchName: '${input.GIT_BRANCH_NAME}'
          }
  DEPLOY:
    taskOrder:
    - Approve-Deployment
    - Deploy-DemoApp
    tasks:
      Deploy-DemoApp:
        type: K8S
        ignoreFailure: false
        preCondition: ''
        endpoints:
          kubernetesServer: K8s-AWS
        input:
          filePath: ''
          commit: ''
          action: APPLY
          parameters: {
            }
          yaml: "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: ${input.GIT_BRANCH_NAME}\n  namespace:\
            \ ${input.GIT_BRANCH_NAME}\n---  \napiVersion: v1\ndata:\n  .dockercfg: eyJzeW1waG9ueS10YW5nby1iZXRhMi5qZnJvZy5pbyI6eyJ1c2VybmFtZSI6InRhbmdvLWJldGEyIiwicGFzc3dvcmQiOiJhRGstcmVOLW1UQi1IejciLCJlbWFpbCI6InRhbmdvLWJldGEyQHZtd2FyZS5jb20iLCJhdXRoIjoiZEdGdVoyOHRZbVYwWVRJNllVUnJMWEpsVGkxdFZFSXRTSG8zIn19\n\
            kind: Secret\nmetadata:\n  name: jfrog-beta2\n  namespace: ${input.GIT_BRANCH_NAME}\ntype:\
            \ kubernetes.io/dockercfg\n---   \napiVersion: v1\nkind: Service\nmetadata:\n  name: codestream-demo\n\
            \  namespace: ${input.GIT_BRANCH_NAME}\n  labels:\n    app: codestream-demo\nspec:\n  ports:\n\
            \    - port: 80\n  selector:\n    app: codestream-demo\n    tier: frontend\n  type: LoadBalancer\
            \ \n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: codestream-demo\n\
            \  namespace: ${input.GIT_BRANCH_NAME}\n  labels:\n    app: codestream-demo\nspec:\n  selector:\n\
            \    matchLabels:\n      app: codestream-demo\n      tier: frontend\n  strategy:\n    type:\
            \ Recreate\n  template:\n    metadata:\n      labels:\n        app: codestream-demo\n    \
            \    tier: frontend\n    spec:\n      containers:\n      - name: codestream-demo\n       \
            \ image: symphony-tango-beta2.jfrog.io/codestream-demo:${input.GIT_BRANCH_NAME}-${DEV.Publish-DemoApp.output.jobId}\n\
            \        ports:\n        - containerPort: 80\n          name: codestream-demo\n      imagePullSecrets:\n\
            \      - name: jfrog-beta2\n      "
      Approve-Deployment:
        type: UserOperation
        ignoreFailure: false
        preCondition: ''
        input:
          summary: ${name} is pending deployment for your approval
          pipelineName: ${name}
          approvers: [
            gkullberg@vmware.com]
          description: ${name} is pending deployment for your approval
          sendemail: false
